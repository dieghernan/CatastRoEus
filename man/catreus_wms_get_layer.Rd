% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wms_eus.R
\name{catreus_wms_get_layer}
\alias{catreus_wms_get_layer}
\title{WMS INSPIRE: Retrieve Map Images from the Basque Country (Pais Vasco) Based on Bounding Box Coordinates}
\usage{
catreus_wms_get_layer(
  x,
  srs = NULL,
  what = c("parcel", "admunit", "admbound", "building", "zoning", "address", "buother"),
  id = "change_id",
  styles = NULL,
  verbose = FALSE,
  crop = FALSE,
  options = list()
)
}
\arguments{
\item{x}{A numeric vector of bbox coordinates or an \code{sf} object defining the area to be covered.
\itemize{
\item A numeric vector of length 4 with the coordinates defining the bounding box:
\code{c(xmin, ymin, xmax, ymax)}.
}}

\item{srs}{The spatial reference system to be used, typically an EPSG code (3857 or 25830).}

\item{what}{Specifies the layer to be extracted. Options include:

For Bizkaia:
\itemize{
\item \code{"parcel"}: CP.CadastralParcel
\item \code{"zoning"}: CP.CadastralZoning
\item \code{"address"}: AD.Address
\item \code{"admunit"}: AU.AdministrativeUnit
}

For Gipuzkoa:
\itemize{
\item \code{"parcel"}: cp.CadastralParcel
\item \code{"zoning"}: cp.CadastralZoning
\item \code{"address"}: ad.Address
\item \code{"admunit"}: au.AdministrativeUnit
\item \code{"admbound"}: au.AdministrativeBoundary
\item \code{"building"}: bu.building
\item \code{"buother"}: bu.otherconstruction
}

For Araba:
\itemize{
\item \code{"parcel"}: CP.CadastralParcel
\item \code{"admunit"}: AU.AdministrativeUnit
\item \code{"admbound"}: AU.AdministrativeBoundary
\item \code{"building"}: BU.Building
}}

\item{id}{An identifier for the custom WMS service configuration.}

\item{styles}{Specifies the style of the WMS layer, see \strong{Styles} for options.}

\item{verbose}{Logical; if \code{TRUE}, prints additional information about function operations.
Useful for debugging. Default is \code{FALSE}.}

\item{crop}{Logical; if \code{TRUE}, the returned image will be cropped to the bbox. Default is \code{FALSE}.}

\item{options}{List; additional options for the WMS request.}
}
\value{
Returns a \code{\link[terra:rast]{SpatRaster}} object with either RGB or RGBA layers depending on the data.
Additionally, prints messages detailing the province detected and any potential issues with
the provided coordinates.
}
\description{
Fetches geotagged images from the Cadastre based on the provided bounding box coordinates.
This function determines the province (Bizkaia, Gipuzkoa, or Araba/√Ålava) using reverse
geocoding and fetches the appropriate data using specific WMS service functions for each
province. It ensures the coordinates fall within a single province and handles different
CRS inputs.
}
\details{
This function uses reverse geocoding to determine the province within the Basque Country from
the provided coordinates. Based on the identified province, it delegates the data fetching to
specific functions handling each province's data. It supports flexible input types and handles
geographical coordinate transformations internally if needed.
}
\section{Styles}{
Various styles are available for each layer, which can enhance the visualization:

Bizkaia:
\itemize{
\item \code{"parcel"}: \code{"CP.CadastralParcel.BoundariesOnly"}, \code{"CP.CadastralParcel.ReferencePointOnly"}, \code{"CP.CadastralParcel.LabelOnReferencePoint"}, \code{"CP.CadastralParcel.Default"}, \code{"inspire_common:DEFAULT"}
\item \code{"zoning"}: \code{"CP.CadastralZoning.Default"}, \code{"inspire_common:DEFAULT"}
\item \code{"address"}: \code{"AD.Address.Default"}, \code{"inspire_common:DEFAULT"}
\item \code{"admunit"}: \code{"AU.AdministrativeUnit.Default"}, \code{"inspire_common:DEFAULT"}
}

Gipuzkoa:
\itemize{
\item \code{"parcel"}: \code{"CP.CadastralParcel.BoundariesOnly"}, \code{"CP.CadastralParcel.ReferencePointOnly"}, \code{"CP.CadastralParcel.LabelOnReferencePoint"}, \code{"CP.CadastralParcel.Default"}, \code{"CP.CadastralParcel.ELFCadastre"}
\item \code{"zoning"}: \code{"CP.CadastralZoning.Default"}, \code{"CP.CadastralZoning.ELFCadastre"}
\item \code{"address"}: \code{"AD.Address.Default"}, \code{"AD.Address.Number.ELFCadastre"}
\item \code{"admunit"}: \code{"AU.AdministrativeUnit.Default"}, \code{"AU.AdministrativeUnit.ELFCadastre"}
\item \code{"admbound"}: \code{"AU.AdministrativeBoundary.Default"}, \code{"AU.AdministrativeBoundary.ELFCadastre"}
\item \code{"building"}: \code{"BU.Building.Default"}, \code{"BU.Building.ELFCadastre"}
\item \code{"buother"}: \code{"BU.OtherConstruction.Default"},\code{"BU.OtherConstruction.ELFCadastre"}
}

Araba:
\itemize{
\item \code{"parcel"}: \code{"INSPIRE_CP:CP.CadastralParcel.Default"}, \code{"INSPIRE_CP:CP.CadastralParcel.ELFCadastre"}, \code{"INSPIRE_CP:CP.CadastralParcel.BoundariesOnly"}, \code{"INSPIRE_CP:CP.CadastralParcel.LabelOnReferencePoint"}, \code{"INSPIRE_CP:CP.CadastralParcel.ReferencePointOnly"}
\item \code{"admunit"}: \code{"INSPIRE_AU:AU.AdministrativeUnit.Default"}
\item \code{"admbound"}: \code{"INSPIRE_AU:AU.AdministrativeBoundary.Default"}
\item \code{"building"}: \code{"INSPIRE_BU:BU.Building.Default"}
}
}

\examples{
\donttest{
library(mapSpain)
library(ggplot2)
library(terra)
library(tidyterra)

# Fetching a building layer using specific bounding box coordinates (Araba)
pic_bu <- catreus_wms_get_layer(c(-298730.238481, 5288011.551711, -296360.690604, 5289922.477418),
  srs = 3857, what = "building", id = "layer_eus_1"
)

# Displaying the fetched raster image
ggplot() +
  geom_spatraster_rgb(data = pic_bu)

# Fetching an address layer using specific bounding box coordinates (Gipuzkoa)
pic_ad <- catreus_wms_get_layer(c(-221868.029226, 5358914.061417, -220750.137688, 5360872.760267),
  srs = 3857, what = "address", id = "layer_eus_2"
)

# Displaying the fetched raster image
ggplot() +
  geom_spatraster_rgb(data = pic_ad)

# Fetching a zoning layer using specific bounding box coordinates (Bizkaia)
pic_zo <- catreus_wms_get_layer(c(-339724.372213, 5356554.068169, -333915.158064, 5361598.912035),
  srs = 3857, what = "zoning", id = "layer_eus_3"
)

# Displaying the fetched raster image
ggplot() +
  geom_spatraster_rgb(data = pic_zo)
}

}
\seealso{
\code{\link[mapSpain:esp_getTiles]{mapSpain::esp_getTiles()}}, \code{\link[mapSpain:esp_make_provider]{mapSpain::esp_make_provider()}}, \code{\link[terra:RGB]{terra::RGB()}}.
For advanced plotting, see \code{\link[terra:plotRGB]{terra::plotRGB()}} and \code{\link[tidyterra:geom_spatraster_rgb]{tidyterra::geom_spatraster_rgb()}}.
}
\concept{INSPIRE}
\concept{WMS}
\concept{spatial data layers from Basque Country (Pais Vasco)}
